const App={data(){return{equationCount:[],genFormSpawn:!1,testSpawn:!1,checked:!1,sveq:1,hgeq:1,score:0,equations:[],userSolutions:[],solutionColor:["Red","Red","Red","Red"]}},methods:{getEquationCount:function(){axios.get("https://localhost:5001/api/homeapi/getequationcount").then(n=>{this.equationCount=n.data,this.refreshJax()})},sendGenOrder:function(){axios({method:"POST",url:"https://localhost:5001/api/homeapi",data:{sveq:this.sveq,hgeq:this.hgeq}}).then(function(n){console.log(n)}).catch(function(n){console.log(n)})},sendGetEqOrder:function(){axios.get("https://localhost:5001/api/homeapi/getequationstosolve").then(n=>{this.equations=n.data,setTimeout(()=>this.refreshJax(),500)}).catch(function(n){console.log(n)})},refreshJax:function(){MathJax.typeset()},checkInput:function(){this.score=0;for(var n=0;n<this.equations.length;n++)this.equations[n].solution===this.userSolutions[n]?(this.score++,this.solutionColor[n]="Green"):this.solutionColor[n]="Red"},toggleTestBtn:function(){this.testSpawn?(this.testSpawn=!1,this.genFormSpawn=!1,this.refreshTestControls()):(this.testSpawn=!0,this.genFormSpawn=!1,this.sendGetEqOrder())},refreshTestControls:function(){this.score=0;this.checked=!1;this.userSolutions=[];this.equations=[];this.solutionColor=["Red","Red","Red","Red"]}},beforeMount(){this.getEquationCount()}};Vue.createApp(App).mount("#vueEntry");